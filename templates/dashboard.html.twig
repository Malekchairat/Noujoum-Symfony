{# templates/admin/dashboard.html.twig #}
{% extends 'backoffice.html.twig' %}

{% block title %}Admin Dashboard{% endblock %}

{% block head %}
    {{ parent() }}
    <style>
        /* Grid layout for cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        /* Base card styling */
        .stat-card {
            background-color: #303234;
            padding: 20px;
            border-radius: 12px;
            color: #ffffff;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        }
        .stat-card h2 {
            margin-bottom: 16px;
            font-size: 1.4rem;
            color: gold;
        }

        /* Podium container and steps */
        .podium {
            display: flex;
            justify-content: center;
            align-items: flex-end;
            gap: 20px;
            margin-top: 20px;
        }
        .podium-step {
            width: 120px;
            border-radius: 10px 10px 0 0;
            box-shadow: 0 4px 10px rgba(0,0,0,0.5);
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 10px;
            color: #222;
            font-family: 'Poppins', sans-serif;
        }
        .podium-step.first {
            height: 220px;
            background: #ffd700;
            z-index: 3;
        }
        .podium-step.second {
            height: 180px;
            background: #c0c0c0;
            z-index: 2;
        }
        .podium-step.third {
            height: 140px;
            background: #cd7f32;
            z-index: 1;
        }
        .podium-step .emoji {
            font-size: 2.5rem;
            margin-bottom: 8px;
        }
        .podium-step .title {
            font-weight: 600;
            text-align: center;
            margin-bottom: auto;
        }
        .podium-step .count {
            margin-top: auto;
            font-size: 1.2rem;
            font-weight: 500;
        }

        /* Charts row styling */
        .charts-row {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        .chart-card {
            flex: 1 1 300px;
            background-color: #222428;
            padding: 20px;
            border-radius: 10px;
        }
        .chart-card h5 {
            margin-bottom: 12px;
            color: #fff;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="stats-grid">
        {# Events Podium #}
        <div class="stat-card">
            <h2>üé§ Podium des √âv√©nements</h2>
            {% if results|length >= 3 %}
                {% set first = results[0] %}
                {% set second = results[1] %}
                {% set third = results[2] %}
                <div class="podium">
                    <div class="podium-step second">
                        <div class="emoji">ü•à</div>
                        <div class="title">{{ second[0].Titre }}</div>
                        <div class="count">{{ second.totalTickets }} Tickets</div>
                    </div>
                    <div class="podium-step first">
                        <div class="emoji">ü•á</div>
                        <div class="title">{{ first[0].Titre }}</div>
                        <div class="count">{{ first.totalTickets }} Tickets</div>
                    </div>
                    <div class="podium-step third">
                        <div class="emoji">ü•â</div>
                        <div class="title">{{ third[0].Titre }}</div>
                        <div class="count">{{ third.totalTickets }} Tickets</div>
                    </div>
                </div>
            {% else %}
                <p>Aucun √©v√©nement disponible.</p>
            {% endif %}
        </div>

        {# Products Podium #}
        <div class="stat-card">
            <h2>‚≠ê Podium des Produits Favoris</h2>
            {% if favorites|length >= 3 %}
                {% set p1 = favorites[0] %}
                {% set p2 = favorites[1] %}
                {% set p3 = favorites[2] %}
                <div class="podium">
                    <div class="podium-step second">
                        <div class="emoji">ü•à</div>
                        <div class="title">{{ p2.productName }}</div>
                        <div class="count">{{ p2.totalLikes }} Likes</div>
                    </div>
                    <div class="podium-step first">
                        <div class="emoji">ü•á</div>
                        <div class="title">{{ p1.productName }}</div>
                        <div class="count">{{ p1.totalLikes }} Likes</div>
                    </div>
                    <div class="podium-step third">
                        <div class="emoji">ü•â</div>
                        <div class="title">{{ p3.productName }}</div>
                        <div class="count">{{ p3.totalLikes }} Likes</div>
                    </div>
                </div>
            {% else %}
                <p>Aucun produit favori.</p>
            {% endif %}
        </div>
    </div>

    {# Reclamations Charts #}
    <div class="charts-row">
        <div class="chart-card">
            <h5>üìä Reclamation Status Overview</h5>
            <canvas id="statusChart"></canvas>
        </div>
        <div class="chart-card">
            <h5>üìä Reclamation Priority Overview</h5>
            <canvas id="priorityChart"></canvas>
        </div>
    </div>

    {# Include Chart.js and init scripts #}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const statusStats   = {{ statusStats|json_encode|raw }};
            const priorityStats = {{ priorityStats|json_encode|raw }};

            new Chart(document.getElementById('statusChart'), {
                type: 'doughnut',
                data: {
                    labels: Object.keys(statusStats),
                    datasets: [{ data: Object.values(statusStats) }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'bottom', labels: { color: '#fff' } } }
                }
            });

            new Chart(document.getElementById('priorityChart'), {
                type: 'bar',
                data: {
                    labels: Object.keys(priorityStats),
                    datasets: [{ label: 'Count', data: Object.values(priorityStats) }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true, ticks: { color: '#fff' } },
                        x: { ticks: { color: '#fff' } }
                    },
                    plugins: { legend: { display: false } }
                }
            });
        });
    </script>
{% endblock %}
