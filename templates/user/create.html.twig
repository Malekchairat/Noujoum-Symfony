{% extends 'backoffice.html.twig' %}

{% block title %}Inscription | Noujoum{% endblock %}

{% block body %}
<style>
    body {
        background-color: #000;
        background-image: url('/images/stars-bg.svg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        font-family: 'Playfair Display', serif;
        color: #fff;
    }

    .form-container {
        margin: 60px auto;
        background: rgba(18, 18, 18, 0.95);
        padding: 40px;
        border-radius: 16px;
        box-shadow: 0 0 30px rgba(255, 215, 0, 0.15);
        position: relative;
        overflow: hidden;
        max-width: 600px;
    }

    .form-container::before {
        content: '';
        position: absolute;
        top: -2px; left: -2px; right: -2px; bottom: -2px;
        z-index: -1;
        border-radius: 18px;
        background: linear-gradient(120deg, #FFD700, #e6c200);
        filter: blur(6px);
        opacity: 0.3;
    }

    h2 {
        color: #FFD700;
        margin-bottom: 25px;
        font-size: 28px;
    }

    .form-label {
        font-weight: 500;
        color: #e0e0e0;
    }

    .form-control,
    .form-control-file {
        background-color: #1e1e1e;
        border: 1px solid #555;
        color: #fff;
        transition: all 0.3s ease;
    }

    .form-control::placeholder {
        color: #aaa;
    }

    .form-control:focus {
        border-color: #FFD700;
        box-shadow: 0 0 12px rgba(255, 215, 0, 0.4);
    }

    .btn-gold {
        background: linear-gradient(to right, #FFD700, #e6c200);
        color: #000;
        padding: 10px 30px;
        font-weight: bold;
        border-radius: 30px;
        border: none;
        transition: 0.3s ease;
    }

    .btn-gold:hover {
        background: linear-gradient(to right, #e6c200, #FFD700);
        transform: translateY(-2px) scale(1.05);
    }

    .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1055;
    }

    .invalid-feedback {
        display: block;
    }
</style>

<!-- Toast Messages -->
<div class="toast-container">
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="toast align-items-center text-white bg-{{ label == 'success' ? 'success' : 'danger' }} border-0 mb-2" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        {{ message }}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        {% endfor %}
    {% endfor %}
</div>

<div class="container">
    <div class="form-container">
        <center>
            <h2>Ajouter un utilisateur</h2>
        </center>

        {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

            {{ form_row(form.nom, {'attr': {'class': 'form-control', 'placeholder': 'Nom'}}) }}
            {{ form_row(form.prenom, {'attr': {'class': 'form-control', 'placeholder': 'Prénom'}}) }}
            {{ form_row(form.email, {'attr': {'class': 'form-control', 'placeholder': 'Email'}}) }}
            {{ form_row(form.mdp, {'attr': {'class': 'form-control', 'placeholder': 'Mot de passe'}}) }}
            {{ form_row(form.tel, {'attr': {'class': 'form-control', 'placeholder': 'Téléphone'}}) }}
            {{ form_row(form.image, {'attr': {'class': 'form-control-file'}}) }}
            {{ form_row(form.role, {'attr': {'class': 'form-control'}}) }}
            {{ form_widget(form._token) }}

            <div class="text-center mt-4">
                <button class="btn btn-gold">
                    {{ button_label|default('Ajouter') }}
                </button>
            </div>

        {{ form_end(form) }}
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Show Bootstrap toast automatically
    document.querySelectorAll('.toast').forEach(toastEl => {
        const toast = new bootstrap.Toast(toastEl);
        toast.show();
    });
</script>
{% endblock %}
