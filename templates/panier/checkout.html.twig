{% extends 'base.html.twig' %}

{% block title %}Checkout - Noujoum{% endblock %}

{% block body %}
<!-- Start Hero Section -->
<div class="hero">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-5">
                <div class="intro-excerpt">
                    <h1>Checkout</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Hero Section -->

<div class="untree_co-section">
    <div class="container">
        <div class="row">
            <!-- Billing Details -->
            <div class="col-md-6 mb-5 mb-md-0">
                <h2 class="h3 mb-3 text-black">Billing Details</h2>
                <div class="p-3 p-lg-5 border bg-white">
                    {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate', 'id': 'checkoutForm'}}) }}
                    
                    <div class="form-group row">
                        <div class="col-md-12">
                            {{ form_row(form.rue, {'attr': {'class': 'form-control'}, 'label': 'Street Address'}) }}
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6">
                            {{ form_row(form.ville, {'attr': {'class': 'form-control'}, 'label': 'City'}) }}
                        </div>
                        <div class="col-md-6">
                            {{ form_row(form.code_postal, {'attr': {'class': 'form-control'}, 'label': 'Postal Code'}) }}
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-12">
                            {{ form_row(form.methodePaiment, {'attr': {'class': 'form-select'}, 'label': 'Payment Method'}) }}
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-12">
                            {{ form_row(form.etat, {'attr': {'class': 'form-select'}, 'label': 'State'}) }}
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <button type="button" id="placeOrderBtn" class="btn btn-primary">
                            <i class="fas fa-shopping-cart me-2"></i>
                            Passer la commande
                        </button>
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>

            <!-- Your Order -->
            <div class="col-md-6">
                <h2 class="h3 mb-3 text-black">Your Order</h2>
                <div class="p-3 p-lg-5 border bg-white">
                    <table class="table site-block-order-table mb-5">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for item in cartItems %}
                            <tr>
                                <td>{{ item.produit.nom }} <strong class="mx-2">x</strong> {{ item.nbrProduit }}</td>
                                <td>{{ item.getTotal() }} €</td>
                            </tr>
                            {% endfor %}
                            <tr>
                                <td class="text-black font-weight-bold"><strong>Order Total</strong></td>
                                <td class="text-black font-weight-bold"><strong>{{ total }} €</strong></td>
                            </tr>
                            <a href="{{ path('app_commande_historique') }}" class="btn btn-primary">
                                Voir mon historique de commandes
                            </a>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="position-fixed top-0 start-0 w-100 h-100 d-none" style="background: rgba(0,0,0,0.5); z-index: 9999;">
    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="spinner-border text-light" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

<script>
function validateField(field) {
    let isValid = true;
    let errorMessage = "";

    if (!field.value.trim()) {
        errorMessage = "Ce champ est requis.";
        isValid = false;
    } else if (field.name === "rue" && !/^[a-zA-Z0-9\s]+$/.test(field.value)) {
        errorMessage = "Pas de caractères spéciaux.";
        isValid = false;
    } else if (field.name === "rue" && field.value.length > 35) {
        errorMessage = "Maximum 35 caractères.";
        isValid = false;
    } else if (field.name === "ville" && !/^[a-zA-Z\s]+$/.test(field.value)) {
        errorMessage = "Lettres uniquement.";
        isValid = false;
    } else if (field.name === "ville" && field.value.length > 10) {
        errorMessage = "Maximum 10 caractères.";
        isValid = false;
    } else if (field.name === "code_postal" && !/^\d{4,5}$/.test(field.value)) {
        errorMessage = "Doit contenir 4 à 5 chiffres.";
        isValid = false;
    }

    if (!isValid) {
        field.classList.add("is-invalid");
        field.nextElementSibling.innerHTML = errorMessage;
    } else {
        field.classList.remove("is-invalid");
        field.classList.add("is-valid");
        field.nextElementSibling.innerHTML = "";
    }

    return isValid;
}

function validateForm() {
    const form = document.getElementById('checkoutForm');
    const fields = form.querySelectorAll(".form-control");
    const submitBtn = document.getElementById('placeOrderBtn');
    let allValid = true;

    fields.forEach(field => {
        if (!validateField(field)) {
            allValid = false;
        }
    });

    submitBtn.disabled = !allValid;
    return allValid;
}

document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById('checkoutForm');
    const fields = form.querySelectorAll(".form-control");

    fields.forEach(field => {
        field.insertAdjacentHTML("afterend", '<div class="invalid-feedback"></div>');
        field.addEventListener("input", function () {
            validateField(this);
            validateForm();
        });
    });

    validateForm();
});

document.getElementById('placeOrderBtn').addEventListener('click', async function() {
    if (!validateForm()) {
        alert('Veuillez corriger les champs avant de continuer.');
        return;
    }

    const spinner = document.getElementById('loadingSpinner');
    const form = document.getElementById('checkoutForm');

    try {
        spinner.classList.remove('d-none');
        const formData = new FormData(form);

        const orderResponse = await fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
        });

        if (!orderResponse.ok) throw new Error('Commande échouée');

        const orderResult = await orderResponse.json();

        if (orderResult.success) {
            await fetch(`/api/order/confirm/${orderResult.orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            window.location.href = '{{ path('app_postcheckout', {'id': 'PLACEHOLDER'}) }}'.replace('PLACEHOLDER', orderResult.orderId);
        }
    } catch (error) {
        alert('Une erreur est survenue. Veuillez réessayer.');
    } finally {
        spinner.classList.add('d-none');
    }
});
</script>

<style>
.btn-primary {
    background-color: #4e73df;
    border-color: #4e73df;
}
.btn-primary:hover {
    background-color: #2e59d9;
    border-color: #2e59d9;
}
.is-invalid {
    border-color: #dc3545;
}
.is-valid {
    border-color: #28a745;
}
</style>
{% endblock %}
